!function(){"use strict";function b(o,t,e,r,a,i,l,s,n){o.beginPath(),o.fillStyle=n;var u=function(o,t,e,r,a,i,l){for(var s=0,n=1e3,u=0;u<1;u+=.001){var c=C(o,t,e,r,a,i,u),d=(f=o,g=t,y=c.x,x=c.y,Math.sqrt((y-f)*(y-f)+(x-g)*(x-g)));Math.abs(d-l)<n&&(n=Math.abs(d-l),s=u)}var f,g,y,x;return C(o,t,e,r,a,i,s)}(t,e,r.x,r.y,a,i,l);o.arc(u.x,u.y,3*s,0,2*Math.PI,!1),o.fill()}function s(o,t,e,r){var a=1-o;return a*a*t+2*a*o*e+o*o*r}function C(o,t,e,r,a,i,l){return{x:s(l,o,e,a),y:s(l,t,r,i)}}sigma.utils.pkg("sigma.canvas.edges"),sigma.canvas.edges.dotCurve=function(o,t,e,r,a){var i,l=o.color,s=a("prefix")||"",n=o[s+"size"]||1,u=a("edgeColor"),c=a("defaultNodeColor"),d=a("defaultEdgeColor"),f=t[s+"size"],g=t[s+"x"],y=t[s+"y"],x=e[s+"x"],C=e[s+"y"];if(i=t.id===e.id?sigma.utils.getSelfLoopControlPoints(g,y,f):sigma.utils.getQuadraticControlPoint(g,y,x,C),!l)switch(u){case"source":l=t.color||c;break;case"target":l=e.color||c;break;default:l=d}if(r.strokeStyle=l,r.lineWidth=n,r.beginPath(),r.moveTo(g,y),t.id===e.id?r.bezierCurveTo(i.x1,i.y1,i.x2,i.y2,x,C):r.quadraticCurveTo(i.x,i.y,x,C),r.stroke(),null!=o.sourceDotColor||null!=o.targetDotColor){var v=o.dotOffset||3,h=o.dotSize||1;h*=n,v*=f,null!=o.sourceDotColor&&b(r,g,y,i,x,C,v,h,o.sourceDotColor),null!=o.targetDotColor&&b(r,x,C,i,g,y,v,h,o.targetDotColor)}}}(),function(){"use strict";function S(o,t,e,r,a,i,l,s,n){o.beginPath(),o.fillStyle=n;var u=function(o,t,e,r,a,i,l){for(var s=0,n=1e3,u=0;u<1;u+=.001){var c=C(o,t,e,r,a,i,u),d=(f=o,g=t,y=c.x,x=c.y,Math.sqrt((y-f)*(y-f)+(x-g)*(x-g)));Math.abs(d-l)<n&&(n=Math.abs(d-l),s=u)}var f,g,y,x;return C(o,t,e,r,a,i,s)}(t,e,r.x,r.y,a,i,l);o.arc(u.x,u.y,3*s,0,2*Math.PI,!1),o.fill()}function s(o,t,e,r){var a=1-o;return a*a*t+2*a*o*e+o*o*r}function C(o,t,e,r,a,i,l){return{x:s(l,o,e,a),y:s(l,t,r,i)}}sigma.utils.pkg("sigma.canvas.edges"),sigma.canvas.edges.dotCurvedArrow=function(o,t,e,r,a){var i,l,s,n,u,c,d=o.color,f=a("prefix")||"",g=a("edgeColor"),y=a("defaultNodeColor"),x=a("defaultEdgeColor"),C=o[f+"size"]||1,v=o.count||0,h=e[f+"size"],b=t[f+"x"],m=t[f+"y"],M=e[f+"x"],D=e[f+"y"],P=Math.max(2.5*C,a("minArrowSize"));if(i=t.id===e.id?sigma.utils.getSelfLoopControlPoints(b,m,h,v):sigma.utils.getQuadraticControlPoint(b,m,M,D,v),c=t.id===e.id?(l=Math.sqrt(Math.pow(M-i.x1,2)+Math.pow(D-i.y1,2)),s=i.x1+(M-i.x1)*(l-P-h)/l,n=i.y1+(D-i.y1)*(l-P-h)/l,u=(M-i.x1)*P/l,(D-i.y1)*P/l):(l=Math.sqrt(Math.pow(M-i.x,2)+Math.pow(D-i.y,2)),s=i.x+(M-i.x)*(l-P-h)/l,n=i.y+(D-i.y)*(l-P-h)/l,u=(M-i.x)*P/l,(D-i.y)*P/l),!d)switch(g){case"source":d=t.color||y;break;case"target":d=e.color||y;break;default:d=x}if(r.strokeStyle=d,r.lineWidth=C,r.beginPath(),r.moveTo(b,m),t.id===e.id?r.bezierCurveTo(i.x2,i.y2,i.x1,i.y1,s,n):r.quadraticCurveTo(i.x,i.y,s,n),r.stroke(),r.fillStyle=d,r.beginPath(),r.moveTo(s+u,n+c),r.lineTo(s+.6*c,n-.6*u),r.lineTo(s-.6*c,n+.6*u),r.lineTo(s+u,n+c),r.closePath(),r.fill(),null!=o.sourceDotColor||null!=o.targetDotColor){var k=o.dotOffset||3,p=o.dotSize||1;p*=C,k*=h,null!=o.sourceDotColor&&S(r,b,m,i,M,D,k,p,o.sourceDotColor),null!=o.targetDotColor&&S(r,M,D,i,b,m,k,p,o.targetDotColor)}}}();